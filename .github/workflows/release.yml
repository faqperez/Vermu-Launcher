name: Build and Release Launcher

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: Release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: npm ci

      - name: Build for platform
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ runner.os }}
          path: dist/

  upload-assets:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.create-release.outputs.version }}
          name: Release ${{ needs.create-release.outputs.version }}
          files: |
            artifacts/dist-ubuntu-latest/*
            artifacts/dist-windows-latest/*
            artifacts/dist-macos-14/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
